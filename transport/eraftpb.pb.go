// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: transport/eraftpb.proto

package transport

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MessageType 枚举消息类型
type MessageType int32

const (
	MessageType_MsgUnknown       MessageType = 0
	MessageType_MsgHup           MessageType = 1
	MessageType_MsgBeat          MessageType = 2
	MessageType_MsgProp          MessageType = 3
	MessageType_MsgApp           MessageType = 4
	MessageType_MsgAppResp       MessageType = 5
	MessageType_MsgVote          MessageType = 6
	MessageType_MsgVoteResp      MessageType = 7
	MessageType_MsgSnap          MessageType = 8
	MessageType_MsgHeartbeat     MessageType = 9
	MessageType_MsgHeartbeatResp MessageType = 10
	MessageType_MsgTimeoutNow    MessageType = 11
	MessageType_MsgReadIndex     MessageType = 12
	MessageType_MsgReadIndexResp MessageType = 13
	MessageType_MsgPreVote       MessageType = 14
	MessageType_MsgPreVoteResp   MessageType = 15
	MessageType_MsgSnapChunk     MessageType = 16
	MessageType_MsgSnapStatus    MessageType = 17
	MessageType_MsgSnapDone      MessageType = 18
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0:  "MsgUnknown",
		1:  "MsgHup",
		2:  "MsgBeat",
		3:  "MsgProp",
		4:  "MsgApp",
		5:  "MsgAppResp",
		6:  "MsgVote",
		7:  "MsgVoteResp",
		8:  "MsgSnap",
		9:  "MsgHeartbeat",
		10: "MsgHeartbeatResp",
		11: "MsgTimeoutNow",
		12: "MsgReadIndex",
		13: "MsgReadIndexResp",
		14: "MsgPreVote",
		15: "MsgPreVoteResp",
		16: "MsgSnapChunk",
		17: "MsgSnapStatus",
		18: "MsgSnapDone",
	}
	MessageType_value = map[string]int32{
		"MsgUnknown":       0,
		"MsgHup":           1,
		"MsgBeat":          2,
		"MsgProp":          3,
		"MsgApp":           4,
		"MsgAppResp":       5,
		"MsgVote":          6,
		"MsgVoteResp":      7,
		"MsgSnap":          8,
		"MsgHeartbeat":     9,
		"MsgHeartbeatResp": 10,
		"MsgTimeoutNow":    11,
		"MsgReadIndex":     12,
		"MsgReadIndexResp": 13,
		"MsgPreVote":       14,
		"MsgPreVoteResp":   15,
		"MsgSnapChunk":     16,
		"MsgSnapStatus":    17,
		"MsgSnapDone":      18,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_eraftpb_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_transport_eraftpb_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{0}
}

// EntryType 枚举日志条目类型
type EntryType int32

const (
	EntryType_EntryNormal       EntryType = 0
	EntryType_EntryConfChange   EntryType = 1
	EntryType_EntryConfChangeV2 EntryType = 2
)

// Enum value maps for EntryType.
var (
	EntryType_name = map[int32]string{
		0: "EntryNormal",
		1: "EntryConfChange",
		2: "EntryConfChangeV2",
	}
	EntryType_value = map[string]int32{
		"EntryNormal":       0,
		"EntryConfChange":   1,
		"EntryConfChangeV2": 2,
	}
)

func (x EntryType) Enum() *EntryType {
	p := new(EntryType)
	*p = x
	return p
}

func (x EntryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EntryType) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_eraftpb_proto_enumTypes[1].Descriptor()
}

func (EntryType) Type() protoreflect.EnumType {
	return &file_transport_eraftpb_proto_enumTypes[1]
}

func (x EntryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EntryType.Descriptor instead.
func (EntryType) EnumDescriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{1}
}

// ConnectionState 连接状态
type ConnectionState int32

const (
	ConnectionState_Connected    ConnectionState = 0
	ConnectionState_Disconnected ConnectionState = 1
	ConnectionState_Connecting   ConnectionState = 2
	ConnectionState_Failed       ConnectionState = 3
	ConnectionState_Recovering   ConnectionState = 4
)

// Enum value maps for ConnectionState.
var (
	ConnectionState_name = map[int32]string{
		0: "Connected",
		1: "Disconnected",
		2: "Connecting",
		3: "Failed",
		4: "Recovering",
	}
	ConnectionState_value = map[string]int32{
		"Connected":    0,
		"Disconnected": 1,
		"Connecting":   2,
		"Failed":       3,
		"Recovering":   4,
	}
)

func (x ConnectionState) Enum() *ConnectionState {
	p := new(ConnectionState)
	*p = x
	return p
}

func (x ConnectionState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionState) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_eraftpb_proto_enumTypes[2].Descriptor()
}

func (ConnectionState) Type() protoreflect.EnumType {
	return &file_transport_eraftpb_proto_enumTypes[2]
}

func (x ConnectionState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionState.Descriptor instead.
func (ConnectionState) EnumDescriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{2}
}

// StreamState 流状态
type StreamState int32

const (
	StreamState_StreamActive StreamState = 0
	StreamState_StreamIdle   StreamState = 1
	StreamState_StreamError  StreamState = 2
	StreamState_StreamClosed StreamState = 3
)

// Enum value maps for StreamState.
var (
	StreamState_name = map[int32]string{
		0: "StreamActive",
		1: "StreamIdle",
		2: "StreamError",
		3: "StreamClosed",
	}
	StreamState_value = map[string]int32{
		"StreamActive": 0,
		"StreamIdle":   1,
		"StreamError":  2,
		"StreamClosed": 3,
	}
)

func (x StreamState) Enum() *StreamState {
	p := new(StreamState)
	*p = x
	return p
}

func (x StreamState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StreamState) Descriptor() protoreflect.EnumDescriptor {
	return file_transport_eraftpb_proto_enumTypes[3].Descriptor()
}

func (StreamState) Type() protoreflect.EnumType {
	return &file_transport_eraftpb_proto_enumTypes[3]
}

func (x StreamState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StreamState.Descriptor instead.
func (StreamState) EnumDescriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{3}
}

// Message 表示一个 Raft 消息
type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          MessageType            `protobuf:"varint,1,opt,name=type,proto3,enum=transport.MessageType" json:"type,omitempty"`                                   // 消息类型
	To            uint64                 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`                                                                  // 目标节点 ID
	From          uint64                 `protobuf:"varint,3,opt,name=from,proto3" json:"from,omitempty"`                                                              // 源节点 ID
	Term          uint64                 `protobuf:"varint,4,opt,name=term,proto3" json:"term,omitempty"`                                                              // 任期号
	LogTerm       uint64                 `protobuf:"varint,5,opt,name=log_term,json=logTerm,proto3" json:"log_term,omitempty"`                                         // 日志条目的任期号
	Index         uint64                 `protobuf:"varint,6,opt,name=index,proto3" json:"index,omitempty"`                                                            // 日志索引
	Entries       []*Entry               `protobuf:"bytes,7,rep,name=entries,proto3" json:"entries,omitempty"`                                                         // 日志条目
	Commit        uint64                 `protobuf:"varint,8,opt,name=commit,proto3" json:"commit,omitempty"`                                                          // 已提交的日志索引
	Snapshot      *Snapshot              `protobuf:"bytes,9,opt,name=snapshot,proto3" json:"snapshot,omitempty"`                                                       // 快照数据
	Reject        bool                   `protobuf:"varint,10,opt,name=reject,proto3" json:"reject,omitempty"`                                                         // 是否拒绝
	RejectHint    uint64                 `protobuf:"varint,11,opt,name=reject_hint,json=rejectHint,proto3" json:"reject_hint,omitempty"`                               // 拒绝提示
	Context       []byte                 `protobuf:"bytes,12,opt,name=context,proto3" json:"context,omitempty"`                                                        // 上下文数据
	ConnState     ConnectionState        `protobuf:"varint,13,opt,name=conn_state,json=connState,proto3,enum=transport.ConnectionState" json:"conn_state,omitempty"`   // 连接状态
	StreamState   StreamState            `protobuf:"varint,14,opt,name=stream_state,json=streamState,proto3,enum=transport.StreamState" json:"stream_state,omitempty"` // 流状态
	Sequence      uint64                 `protobuf:"varint,15,opt,name=sequence,proto3" json:"sequence,omitempty"`                                                     // 消息序列号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_transport_eraftpb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MsgUnknown
}

func (x *Message) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *Message) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *Message) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Message) GetLogTerm() uint64 {
	if x != nil {
		return x.LogTerm
	}
	return 0
}

func (x *Message) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Message) GetEntries() []*Entry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *Message) GetCommit() uint64 {
	if x != nil {
		return x.Commit
	}
	return 0
}

func (x *Message) GetSnapshot() *Snapshot {
	if x != nil {
		return x.Snapshot
	}
	return nil
}

func (x *Message) GetReject() bool {
	if x != nil {
		return x.Reject
	}
	return false
}

func (x *Message) GetRejectHint() uint64 {
	if x != nil {
		return x.RejectHint
	}
	return 0
}

func (x *Message) GetContext() []byte {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *Message) GetConnState() ConnectionState {
	if x != nil {
		return x.ConnState
	}
	return ConnectionState_Connected
}

func (x *Message) GetStreamState() StreamState {
	if x != nil {
		return x.StreamState
	}
	return StreamState_StreamActive
}

func (x *Message) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// Entry 表示一个日志条目
type Entry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Term          uint64                 `protobuf:"varint,1,opt,name=term,proto3" json:"term,omitempty"`                          // 任期号
	Index         uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`                        // 日志索引
	Type          EntryType              `protobuf:"varint,3,opt,name=type,proto3,enum=transport.EntryType" json:"type,omitempty"` // 条目类型
	Data          []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                           // 数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Entry) Reset() {
	*x = Entry{}
	mi := &file_transport_eraftpb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Entry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entry) ProtoMessage() {}

func (x *Entry) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entry.ProtoReflect.Descriptor instead.
func (*Entry) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{1}
}

func (x *Entry) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *Entry) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Entry) GetType() EntryType {
	if x != nil {
		return x.Type
	}
	return EntryType_EntryNormal
}

func (x *Entry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// SnapshotChunk 表示快照的一个数据块
type SnapshotChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                                   // 块数据
	ChunkId       uint64                 `protobuf:"varint,2,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`             // 块 ID
	TotalChunks   uint64                 `protobuf:"varint,3,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"` // 总块数
	SnapshotId    uint64                 `protobuf:"varint,4,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`    // 快照 ID
	Metadata      *SnapshotMetadata      `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`                           // 快照元数据（仅在第一个块中）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotChunk) Reset() {
	*x = SnapshotChunk{}
	mi := &file_transport_eraftpb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotChunk) ProtoMessage() {}

func (x *SnapshotChunk) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotChunk.ProtoReflect.Descriptor instead.
func (*SnapshotChunk) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{2}
}

func (x *SnapshotChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SnapshotChunk) GetChunkId() uint64 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *SnapshotChunk) GetTotalChunks() uint64 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *SnapshotChunk) GetSnapshotId() uint64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SnapshotChunk) GetMetadata() *SnapshotMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// Snapshot 表示一个快照
type Snapshot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`                                // 快照数据
	Metadata      *SnapshotMetadata      `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`                        // 快照元数据
	SnapshotId    uint64                 `protobuf:"varint,3,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"` // 快照 ID
	TotalSize     uint64                 `protobuf:"varint,4,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`    // 总大小
	ChunkSize     uint64                 `protobuf:"varint,5,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`    // 块大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Snapshot) Reset() {
	*x = Snapshot{}
	mi := &file_transport_eraftpb_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Snapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Snapshot) ProtoMessage() {}

func (x *Snapshot) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Snapshot.ProtoReflect.Descriptor instead.
func (*Snapshot) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{3}
}

func (x *Snapshot) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Snapshot) GetMetadata() *SnapshotMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Snapshot) GetSnapshotId() uint64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *Snapshot) GetTotalSize() uint64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *Snapshot) GetChunkSize() uint64 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

// SnapshotMetadata 表示快照的元数据
type SnapshotMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConfState     *ConfState             `protobuf:"bytes,1,opt,name=conf_state,json=confState,proto3" json:"conf_state,omitempty"` // 配置状态
	Index         uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`                         // 快照对应的日志索引
	Term          uint64                 `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`                           // 快照对应的任期号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotMetadata) Reset() {
	*x = SnapshotMetadata{}
	mi := &file_transport_eraftpb_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotMetadata) ProtoMessage() {}

func (x *SnapshotMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotMetadata.ProtoReflect.Descriptor instead.
func (*SnapshotMetadata) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{4}
}

func (x *SnapshotMetadata) GetConfState() *ConfState {
	if x != nil {
		return x.ConfState
	}
	return nil
}

func (x *SnapshotMetadata) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *SnapshotMetadata) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

// ConfState 表示集群配置状态
type ConfState struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Voters        []uint64               `protobuf:"varint,1,rep,packed,name=voters,proto3" json:"voters,omitempty"`     // 投票成员列表
	Learners      []uint64               `protobuf:"varint,2,rep,packed,name=learners,proto3" json:"learners,omitempty"` // 学习者列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfState) Reset() {
	*x = ConfState{}
	mi := &file_transport_eraftpb_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfState) ProtoMessage() {}

func (x *ConfState) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfState.ProtoReflect.Descriptor instead.
func (*ConfState) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{5}
}

func (x *ConfState) GetVoters() []uint64 {
	if x != nil {
		return x.Voters
	}
	return nil
}

func (x *ConfState) GetLearners() []uint64 {
	if x != nil {
		return x.Learners
	}
	return nil
}

// HeartbeatRequest 心跳请求
type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          uint64                 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	To            uint64                 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`
	Term          uint64                 `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_transport_eraftpb_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{6}
}

func (x *HeartbeatRequest) GetFrom() uint64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *HeartbeatRequest) GetTo() uint64 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *HeartbeatRequest) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

// HeartbeatResponse 心跳响应
type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	Term          uint64                 `protobuf:"varint,3,opt,name=term,proto3" json:"term,omitempty"`
	ConnState     ConnectionState        `protobuf:"varint,4,opt,name=conn_state,json=connState,proto3,enum=transport.ConnectionState" json:"conn_state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_transport_eraftpb_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{7}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *HeartbeatResponse) GetTerm() uint64 {
	if x != nil {
		return x.Term
	}
	return 0
}

func (x *HeartbeatResponse) GetConnState() ConnectionState {
	if x != nil {
		return x.ConnState
	}
	return ConnectionState_Connected
}

// SnapshotResponse 快照响应
type SnapshotResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`                                                     // 是否成功
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`                                                          // 错误信息
	ChunkId       uint64                 `protobuf:"varint,3,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`                                      // 已接收的块 ID
	SnapshotId    uint64                 `protobuf:"varint,4,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`                             // 快照 ID
	ConnState     ConnectionState        `protobuf:"varint,5,opt,name=conn_state,json=connState,proto3,enum=transport.ConnectionState" json:"conn_state,omitempty"` // 连接状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SnapshotResponse) Reset() {
	*x = SnapshotResponse{}
	mi := &file_transport_eraftpb_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SnapshotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SnapshotResponse) ProtoMessage() {}

func (x *SnapshotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SnapshotResponse.ProtoReflect.Descriptor instead.
func (*SnapshotResponse) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{8}
}

func (x *SnapshotResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SnapshotResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *SnapshotResponse) GetChunkId() uint64 {
	if x != nil {
		return x.ChunkId
	}
	return 0
}

func (x *SnapshotResponse) GetSnapshotId() uint64 {
	if x != nil {
		return x.SnapshotId
	}
	return 0
}

func (x *SnapshotResponse) GetConnState() ConnectionState {
	if x != nil {
		return x.ConnState
	}
	return ConnectionState_Connected
}

// RaftMessageRequest 包含要发送的 Raft 消息
type RaftMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       *Message               `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Sequence      uint64                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"` // 消息序列号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaftMessageRequest) Reset() {
	*x = RaftMessageRequest{}
	mi := &file_transport_eraftpb_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaftMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftMessageRequest) ProtoMessage() {}

func (x *RaftMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftMessageRequest.ProtoReflect.Descriptor instead.
func (*RaftMessageRequest) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{9}
}

func (x *RaftMessageRequest) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *RaftMessageRequest) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

// RaftMessageResponse 表示消息处理的结果
type RaftMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	ConnState     ConnectionState        `protobuf:"varint,3,opt,name=conn_state,json=connState,proto3,enum=transport.ConnectionState" json:"conn_state,omitempty"`   // 连接状态
	StreamState   StreamState            `protobuf:"varint,4,opt,name=stream_state,json=streamState,proto3,enum=transport.StreamState" json:"stream_state,omitempty"` // 流状态
	Sequence      uint64                 `protobuf:"varint,5,opt,name=sequence,proto3" json:"sequence,omitempty"`                                                     // 响应的消息序列号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RaftMessageResponse) Reset() {
	*x = RaftMessageResponse{}
	mi := &file_transport_eraftpb_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RaftMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RaftMessageResponse) ProtoMessage() {}

func (x *RaftMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_transport_eraftpb_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RaftMessageResponse.ProtoReflect.Descriptor instead.
func (*RaftMessageResponse) Descriptor() ([]byte, []int) {
	return file_transport_eraftpb_proto_rawDescGZIP(), []int{10}
}

func (x *RaftMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RaftMessageResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RaftMessageResponse) GetConnState() ConnectionState {
	if x != nil {
		return x.ConnState
	}
	return ConnectionState_Connected
}

func (x *RaftMessageResponse) GetStreamState() StreamState {
	if x != nil {
		return x.StreamState
	}
	return StreamState_StreamActive
}

func (x *RaftMessageResponse) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

var File_transport_eraftpb_proto protoreflect.FileDescriptor

const file_transport_eraftpb_proto_rawDesc = "" +
	"\n" +
	"\x17transport/eraftpb.proto\x12\ttransport\"\xf8\x03\n" +
	"\aMessage\x12*\n" +
	"\x04type\x18\x01 \x01(\x0e2\x16.transport.MessageTypeR\x04type\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x04R\x02to\x12\x12\n" +
	"\x04from\x18\x03 \x01(\x04R\x04from\x12\x12\n" +
	"\x04term\x18\x04 \x01(\x04R\x04term\x12\x19\n" +
	"\blog_term\x18\x05 \x01(\x04R\alogTerm\x12\x14\n" +
	"\x05index\x18\x06 \x01(\x04R\x05index\x12*\n" +
	"\aentries\x18\a \x03(\v2\x10.transport.EntryR\aentries\x12\x16\n" +
	"\x06commit\x18\b \x01(\x04R\x06commit\x12/\n" +
	"\bsnapshot\x18\t \x01(\v2\x13.transport.SnapshotR\bsnapshot\x12\x16\n" +
	"\x06reject\x18\n" +
	" \x01(\bR\x06reject\x12\x1f\n" +
	"\vreject_hint\x18\v \x01(\x04R\n" +
	"rejectHint\x12\x18\n" +
	"\acontext\x18\f \x01(\fR\acontext\x129\n" +
	"\n" +
	"conn_state\x18\r \x01(\x0e2\x1a.transport.ConnectionStateR\tconnState\x129\n" +
	"\fstream_state\x18\x0e \x01(\x0e2\x16.transport.StreamStateR\vstreamState\x12\x1a\n" +
	"\bsequence\x18\x0f \x01(\x04R\bsequence\"o\n" +
	"\x05Entry\x12\x12\n" +
	"\x04term\x18\x01 \x01(\x04R\x04term\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x04R\x05index\x12(\n" +
	"\x04type\x18\x03 \x01(\x0e2\x14.transport.EntryTypeR\x04type\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\"\xbb\x01\n" +
	"\rSnapshotChunk\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x19\n" +
	"\bchunk_id\x18\x02 \x01(\x04R\achunkId\x12!\n" +
	"\ftotal_chunks\x18\x03 \x01(\x04R\vtotalChunks\x12\x1f\n" +
	"\vsnapshot_id\x18\x04 \x01(\x04R\n" +
	"snapshotId\x127\n" +
	"\bmetadata\x18\x05 \x01(\v2\x1b.transport.SnapshotMetadataR\bmetadata\"\xb6\x01\n" +
	"\bSnapshot\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x127\n" +
	"\bmetadata\x18\x02 \x01(\v2\x1b.transport.SnapshotMetadataR\bmetadata\x12\x1f\n" +
	"\vsnapshot_id\x18\x03 \x01(\x04R\n" +
	"snapshotId\x12\x1d\n" +
	"\n" +
	"total_size\x18\x04 \x01(\x04R\ttotalSize\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x05 \x01(\x04R\tchunkSize\"q\n" +
	"\x10SnapshotMetadata\x123\n" +
	"\n" +
	"conf_state\x18\x01 \x01(\v2\x14.transport.ConfStateR\tconfState\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x04R\x05index\x12\x12\n" +
	"\x04term\x18\x03 \x01(\x04R\x04term\"?\n" +
	"\tConfState\x12\x16\n" +
	"\x06voters\x18\x01 \x03(\x04R\x06voters\x12\x1a\n" +
	"\blearners\x18\x02 \x03(\x04R\blearners\"J\n" +
	"\x10HeartbeatRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x04R\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x04R\x02to\x12\x12\n" +
	"\x04term\x18\x03 \x01(\x04R\x04term\"\x92\x01\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x12\n" +
	"\x04term\x18\x03 \x01(\x04R\x04term\x129\n" +
	"\n" +
	"conn_state\x18\x04 \x01(\x0e2\x1a.transport.ConnectionStateR\tconnState\"\xb9\x01\n" +
	"\x10SnapshotResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x12\x19\n" +
	"\bchunk_id\x18\x03 \x01(\x04R\achunkId\x12\x1f\n" +
	"\vsnapshot_id\x18\x04 \x01(\x04R\n" +
	"snapshotId\x129\n" +
	"\n" +
	"conn_state\x18\x05 \x01(\x0e2\x1a.transport.ConnectionStateR\tconnState\"^\n" +
	"\x12RaftMessageRequest\x12,\n" +
	"\amessage\x18\x01 \x01(\v2\x12.transport.MessageR\amessage\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\x04R\bsequence\"\xd7\x01\n" +
	"\x13RaftMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\x129\n" +
	"\n" +
	"conn_state\x18\x03 \x01(\x0e2\x1a.transport.ConnectionStateR\tconnState\x129\n" +
	"\fstream_state\x18\x04 \x01(\x0e2\x16.transport.StreamStateR\vstreamState\x12\x1a\n" +
	"\bsequence\x18\x05 \x01(\x04R\bsequence*\xc7\x02\n" +
	"\vMessageType\x12\x0e\n" +
	"\n" +
	"MsgUnknown\x10\x00\x12\n" +
	"\n" +
	"\x06MsgHup\x10\x01\x12\v\n" +
	"\aMsgBeat\x10\x02\x12\v\n" +
	"\aMsgProp\x10\x03\x12\n" +
	"\n" +
	"\x06MsgApp\x10\x04\x12\x0e\n" +
	"\n" +
	"MsgAppResp\x10\x05\x12\v\n" +
	"\aMsgVote\x10\x06\x12\x0f\n" +
	"\vMsgVoteResp\x10\a\x12\v\n" +
	"\aMsgSnap\x10\b\x12\x10\n" +
	"\fMsgHeartbeat\x10\t\x12\x14\n" +
	"\x10MsgHeartbeatResp\x10\n" +
	"\x12\x11\n" +
	"\rMsgTimeoutNow\x10\v\x12\x10\n" +
	"\fMsgReadIndex\x10\f\x12\x14\n" +
	"\x10MsgReadIndexResp\x10\r\x12\x0e\n" +
	"\n" +
	"MsgPreVote\x10\x0e\x12\x12\n" +
	"\x0eMsgPreVoteResp\x10\x0f\x12\x10\n" +
	"\fMsgSnapChunk\x10\x10\x12\x11\n" +
	"\rMsgSnapStatus\x10\x11\x12\x0f\n" +
	"\vMsgSnapDone\x10\x12*H\n" +
	"\tEntryType\x12\x0f\n" +
	"\vEntryNormal\x10\x00\x12\x13\n" +
	"\x0fEntryConfChange\x10\x01\x12\x15\n" +
	"\x11EntryConfChangeV2\x10\x02*^\n" +
	"\x0fConnectionState\x12\r\n" +
	"\tConnected\x10\x00\x12\x10\n" +
	"\fDisconnected\x10\x01\x12\x0e\n" +
	"\n" +
	"Connecting\x10\x02\x12\n" +
	"\n" +
	"\x06Failed\x10\x03\x12\x0e\n" +
	"\n" +
	"Recovering\x10\x04*R\n" +
	"\vStreamState\x12\x10\n" +
	"\fStreamActive\x10\x00\x12\x0e\n" +
	"\n" +
	"StreamIdle\x10\x01\x12\x0f\n" +
	"\vStreamError\x10\x02\x12\x10\n" +
	"\fStreamClosed\x10\x032\xca\x02\n" +
	"\vRaftService\x12N\n" +
	"\vSendMessage\x12\x1d.transport.RaftMessageRequest\x1a\x1e.transport.RaftMessageResponse\"\x00\x12T\n" +
	"\rStreamMessage\x12\x1d.transport.RaftMessageRequest\x1a\x1e.transport.RaftMessageResponse\"\x00(\x010\x01\x12H\n" +
	"\tHeartbeat\x12\x1b.transport.HeartbeatRequest\x1a\x1c.transport.HeartbeatResponse\"\x00\x12K\n" +
	"\fSendSnapshot\x12\x18.transport.SnapshotChunk\x1a\x1b.transport.SnapshotResponse\"\x00(\x010\x01B\x11Z\x0fqklzl/transportb\x06proto3"

var (
	file_transport_eraftpb_proto_rawDescOnce sync.Once
	file_transport_eraftpb_proto_rawDescData []byte
)

func file_transport_eraftpb_proto_rawDescGZIP() []byte {
	file_transport_eraftpb_proto_rawDescOnce.Do(func() {
		file_transport_eraftpb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transport_eraftpb_proto_rawDesc), len(file_transport_eraftpb_proto_rawDesc)))
	})
	return file_transport_eraftpb_proto_rawDescData
}

var file_transport_eraftpb_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_transport_eraftpb_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_transport_eraftpb_proto_goTypes = []any{
	(MessageType)(0),            // 0: transport.MessageType
	(EntryType)(0),              // 1: transport.EntryType
	(ConnectionState)(0),        // 2: transport.ConnectionState
	(StreamState)(0),            // 3: transport.StreamState
	(*Message)(nil),             // 4: transport.Message
	(*Entry)(nil),               // 5: transport.Entry
	(*SnapshotChunk)(nil),       // 6: transport.SnapshotChunk
	(*Snapshot)(nil),            // 7: transport.Snapshot
	(*SnapshotMetadata)(nil),    // 8: transport.SnapshotMetadata
	(*ConfState)(nil),           // 9: transport.ConfState
	(*HeartbeatRequest)(nil),    // 10: transport.HeartbeatRequest
	(*HeartbeatResponse)(nil),   // 11: transport.HeartbeatResponse
	(*SnapshotResponse)(nil),    // 12: transport.SnapshotResponse
	(*RaftMessageRequest)(nil),  // 13: transport.RaftMessageRequest
	(*RaftMessageResponse)(nil), // 14: transport.RaftMessageResponse
}
var file_transport_eraftpb_proto_depIdxs = []int32{
	0,  // 0: transport.Message.type:type_name -> transport.MessageType
	5,  // 1: transport.Message.entries:type_name -> transport.Entry
	7,  // 2: transport.Message.snapshot:type_name -> transport.Snapshot
	2,  // 3: transport.Message.conn_state:type_name -> transport.ConnectionState
	3,  // 4: transport.Message.stream_state:type_name -> transport.StreamState
	1,  // 5: transport.Entry.type:type_name -> transport.EntryType
	8,  // 6: transport.SnapshotChunk.metadata:type_name -> transport.SnapshotMetadata
	8,  // 7: transport.Snapshot.metadata:type_name -> transport.SnapshotMetadata
	9,  // 8: transport.SnapshotMetadata.conf_state:type_name -> transport.ConfState
	2,  // 9: transport.HeartbeatResponse.conn_state:type_name -> transport.ConnectionState
	2,  // 10: transport.SnapshotResponse.conn_state:type_name -> transport.ConnectionState
	4,  // 11: transport.RaftMessageRequest.message:type_name -> transport.Message
	2,  // 12: transport.RaftMessageResponse.conn_state:type_name -> transport.ConnectionState
	3,  // 13: transport.RaftMessageResponse.stream_state:type_name -> transport.StreamState
	13, // 14: transport.RaftService.SendMessage:input_type -> transport.RaftMessageRequest
	13, // 15: transport.RaftService.StreamMessage:input_type -> transport.RaftMessageRequest
	10, // 16: transport.RaftService.Heartbeat:input_type -> transport.HeartbeatRequest
	6,  // 17: transport.RaftService.SendSnapshot:input_type -> transport.SnapshotChunk
	14, // 18: transport.RaftService.SendMessage:output_type -> transport.RaftMessageResponse
	14, // 19: transport.RaftService.StreamMessage:output_type -> transport.RaftMessageResponse
	11, // 20: transport.RaftService.Heartbeat:output_type -> transport.HeartbeatResponse
	12, // 21: transport.RaftService.SendSnapshot:output_type -> transport.SnapshotResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_transport_eraftpb_proto_init() }
func file_transport_eraftpb_proto_init() {
	if File_transport_eraftpb_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transport_eraftpb_proto_rawDesc), len(file_transport_eraftpb_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_transport_eraftpb_proto_goTypes,
		DependencyIndexes: file_transport_eraftpb_proto_depIdxs,
		EnumInfos:         file_transport_eraftpb_proto_enumTypes,
		MessageInfos:      file_transport_eraftpb_proto_msgTypes,
	}.Build()
	File_transport_eraftpb_proto = out.File
	file_transport_eraftpb_proto_goTypes = nil
	file_transport_eraftpb_proto_depIdxs = nil
}
